{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class CandidateService {\n  //private apiUrl = process.env.BACKEND_URL;\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'http://localhost:8000';\n  }\n  getAllCandidates() {\n    console.log(\"Root Url....!!\");\n    console.log(`${this.apiUrl}`);\n    return this.http.get(`${this.apiUrl}/candidate/all`);\n  }\n  static #_ = this.ɵfac = function CandidateService_Factory(t) {\n    return new (t || CandidateService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: CandidateService,\n    factory: CandidateService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"mappings":";;AAQA,OAAM,MAAOA,gBAAgB;EAG3B;EACAC,YAAoBC,IAAe;IAAf,SAAI,GAAJA,IAAI;IAFhB,WAAM,GAAC,uBAAuB;EAEC;EAGvCC,gBAAgB;IACdC,OAAO,CAACC,GAAG,CAAC,gBAAgB,CAAC;IAC7BD,OAAO,CAACC,GAAG,CAAC,GAAG,IAAI,CAACC,MAAM,EAAE,CAAC;IAC7B,OAAO,IAAI,CAACJ,IAAI,CAACK,GAAG,CAAc,GAAG,IAAI,CAACD,MAAM,gBAAgB,CAAC;EACnE;EAAC;qBAXUN,gBAAgB;EAAA;EAAA;WAAhBA,gBAAgB;IAAAQ,SAAhBR,gBAAgB;IAAAS,YAFf;EAAM","names":["CandidateService","constructor","http","getAllCandidates","console","log","apiUrl","get","factory","providedIn"],"sourceRoot":"","sources":["E:\\Angular practice section\\frontend-app\\src\\app\\candidate.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport {Candidate} from \"./models/candidate\";\nimport {Observable} from \"rxjs\";\nimport {HttpClient} from \"@angular/common/http\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CandidateService {\n\n  private apiUrl='http://localhost:8000'\n  //private apiUrl = process.env.BACKEND_URL;\n  constructor(private http:HttpClient) { }\n\n\n  getAllCandidates():Observable<Candidate[]>{\n    console.log(\"Root Url....!!\");\n    console.log(`${this.apiUrl}`);\n    return this.http.get<Candidate[]>(`${this.apiUrl}/candidate/all`)\n  };\n\n\n  // getHeaders():HttpHeaders{\n  //   const headers:HttpHeaders = new HttpHeaders();\n  //   headers.set(\"Authorization\", \"Bearer \"+token);\n  //   return headers;\n  // }\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}